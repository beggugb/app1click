{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/gabriel/Documentos/1click/Mobil/src/screens/Register/RegisterScreen.js\";\n\nimport React, { useState, createRef } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Block, Text, Button as GaButton, theme, Input, Icon } from \"galio-framework\";\nimport { begguTheme } from \"../../constants\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clientesActions } from \"../../actions\";\nimport Loader from \"../../screens/components/loader\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userNombre = _useState2[0],\n      setUserNombre = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userTelefono = _useState4[0],\n      setUserTelefono = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userEmail = _useState6[0],\n      setUserEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userUsername = _useState8[0],\n      setUserUsername = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userPassword = _useState10[0],\n      setUserPassword = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      userRefNombre = _useState12[0],\n      setRefNombre = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      userRefEmail = _useState14[0],\n      setUserRefEmail = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      errortext = _useState16[0],\n      setErrortext = _useState16[1];\n\n  var loading = useSelector(function (state) {\n    return state.clientes.loading;\n  });\n  var isRegistraionSuccess = useSelector(function (state) {\n    return state.clientes.isRegistraionSuccess;\n  });\n  var dispatch = useDispatch();\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext('');\n\n    if (!userNombre) {\n      alert('Por favor ingrese nombre');\n      return;\n    }\n\n    if (!userTelefono) {\n      alert('Por favor ingrese tel√©fono');\n      return;\n    }\n\n    if (!userEmail) {\n      alert('Por favor ingrese email');\n      return;\n    }\n\n    if (!userUsername) {\n      alert('Por favor ingrese username');\n      return;\n    }\n\n    if (!userPassword) {\n      alert('Por favor ingrese password');\n      return;\n    }\n\n    if (!userRefNombre) {\n      alert('Por favor ingrese nombre referencia');\n      return;\n    }\n\n    if (!userRefEmail) {\n      alert('Por favor ingrese mail referencia');\n      return;\n    }\n\n    var dataToSend = {\n      nombre: userNombre,\n      email: userEmail,\n      telefono: userTelefono,\n      username: userUsername,\n      password: userPassword,\n      refnombre: userRefNombre,\n      refemail: userRefEmail\n    };\n    dispatch(clientesActions.registro(dataToSend));\n  };\n\n  if (isRegistraionSuccess) {\n    return React.createElement(Block, {\n      style: {\n        flex: 1,\n        backgroundColor: '#eaeaea',\n        justifyContent: 'center'\n      }\n    }, React.createElement(Text, {\n      style: styles.successTextStyle\n    }, \"Registro exitoso !!\"), React.createElement(TouchableOpacity, {\n      style: styles.buttonStyle,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextStyle\n    }, \"Inicia sesi\\xF3n\")));\n  }\n\n  return React.createElement(Block, {\n    flex: true,\n    style: {\n      backgroundColor: '#eaeaea',\n      paddingTop: 10\n    }\n  }, React.createElement(Loader, {\n    loading: loading\n  }), React.createElement(Block, {\n    flex: true,\n    style: styles.group\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: {\n      justifyContent: 'center',\n      alignContent: 'center'\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    enabled: true\n  }, React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(Text, {\n    style: styles.textInput\n  }, \"Datos personales\")), React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Nombres\",\n    placeholderTextColor: begguTheme.COLORS.MUTED,\n    style: styles.inputStyle,\n    color: begguTheme.COLORS.HEADER,\n    onChangeText: function onChangeText(Nombre) {\n      return setUserNombre(Nombre);\n    },\n    iconContent: React.createElement(Icon, {\n      size: 14,\n      color: begguTheme.COLORS.ICON,\n      name: \"link\",\n      family: \"AntDesign\",\n      style: styles.icons\n    })\n  })), React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Email\",\n    placeholderTextColor: begguTheme.COLORS.MUTED,\n    style: styles.inputStyle,\n    color: begguTheme.COLORS.HEADER,\n    onChangeText: function onChangeText(Email) {\n      return setUserEmail(Email);\n    },\n    iconContent: React.createElement(Icon, {\n      size: 14,\n      color: begguTheme.COLORS.ICON,\n      name: \"link\",\n      family: \"AntDesign\",\n      style: styles.icons\n    })\n  })), React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Tel\\xE9fono\",\n    placeholderTextColor: begguTheme.COLORS.MUTED,\n    style: styles.inputStyle,\n    color: begguTheme.COLORS.HEADER,\n    onChangeText: function onChangeText(Telefono) {\n      return setUserTelefono(Telefono);\n    },\n    iconContent: React.createElement(Icon, {\n      size: 14,\n      color: begguTheme.COLORS.ICON,\n      name: \"link\",\n      family: \"AntDesign\",\n      style: styles.icons\n    })\n  })), React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Username\",\n    placeholderTextColor: begguTheme.COLORS.MUTED,\n    style: styles.inputStyle,\n    color: begguTheme.COLORS.HEADER,\n    onChangeText: function onChangeText(Username) {\n      return setUserUsername(Username);\n    },\n    iconContent: React.createElement(Icon, {\n      size: 14,\n      color: begguTheme.COLORS.ICON,\n      name: \"link\",\n      family: \"AntDesign\",\n      style: styles.icons\n    })\n  })), React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Password\",\n    placeholderTextColor: begguTheme.COLORS.MUTED,\n    style: styles.inputStyle,\n    secureTextEntry: true,\n    color: begguTheme.COLORS.HEADER,\n    onChangeText: function onChangeText(Password) {\n      return setUserPassword(Password);\n    },\n    iconContent: React.createElement(Icon, {\n      size: 14,\n      color: begguTheme.COLORS.ICON,\n      name: \"link\",\n      family: \"AntDesign\",\n      style: styles.icons\n    })\n  })), React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(Text, {\n    style: styles.textInput\n  }, \"Datos de referencia\")), React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Nombre referencia\",\n    placeholderTextColor: begguTheme.COLORS.MUTED,\n    style: styles.inputStyle,\n    color: begguTheme.COLORS.HEADER,\n    onChangeText: function onChangeText(RefNombre) {\n      return setRefNombre(RefNombre);\n    },\n    iconContent: React.createElement(Icon, {\n      size: 14,\n      color: begguTheme.COLORS.ICON,\n      name: \"link\",\n      family: \"AntDesign\",\n      style: styles.icons\n    })\n  })), React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Email referencia\",\n    placeholderTextColor: begguTheme.COLORS.MUTED,\n    style: styles.inputStyle,\n    color: begguTheme.COLORS.HEADER,\n    onChangeText: function onChangeText(RefEmail) {\n      return setUserRefEmail(RefEmail);\n    },\n    iconContent: React.createElement(Icon, {\n      size: 14,\n      color: begguTheme.COLORS.ICON,\n      name: \"link\",\n      family: \"AntDesign\",\n      style: styles.icons\n    })\n  })), React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: handleSubmitButton\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle\n  }, \"REGISTER\")))))));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  sectionInput: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n    borderWidth: 3,\n    borderColor: \"#fff\"\n  },\n  inputStyle: {\n    flex: 1,\n    width: '100%',\n    borderRadius: 4,\n    borderColor: begguTheme.COLORS.BORDER,\n    backgroundColor: '#FFFFFF',\n    paddingLeft: 15\n  },\n  icons: {\n    paddingLeft: 2,\n    paddingRight: 15\n  },\n  success: {\n    borderColor: begguTheme.COLORS.INPUT_SUCCESS\n  },\n  error: {\n    borderColor: begguTheme.COLORS.INPUT_ERROR\n  },\n  shadow: {\n    shadowColor: begguTheme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowRadius: 2,\n    shadowOpacity: 0.05,\n    elevation: 2\n  },\n  textInput: {\n    color: \"#4d4d4d\",\n    fontSize: 16,\n    height: 17,\n    marginBottom: 1\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 10,\n    marginLeft: 35,\n    marginRight: 35,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["/home/gabriel/Documentos/1click/Mobil/src/screens/Register/RegisterScreen.js"],"names":["React","useState","createRef","Block","Text","Button","GaButton","theme","Input","Icon","begguTheme","useSelector","useDispatch","clientesActions","Loader","RegisterScreen","navigation","userNombre","setUserNombre","userTelefono","setUserTelefono","userEmail","setUserEmail","userUsername","setUserUsername","userPassword","setUserPassword","userRefNombre","setRefNombre","userRefEmail","setUserRefEmail","errortext","setErrortext","loading","state","clientes","isRegistraionSuccess","dispatch","handleSubmitButton","alert","dataToSend","nombre","email","telefono","username","password","refnombre","refemail","registro","flex","backgroundColor","justifyContent","styles","successTextStyle","buttonStyle","navigate","buttonTextStyle","paddingTop","group","alignContent","paddingHorizontal","SIZES","BASE","textInput","COLORS","MUTED","inputStyle","HEADER","Nombre","ICON","icons","Email","Telefono","Username","Password","RefNombre","RefEmail","StyleSheet","create","sectionInput","flexDirection","height","marginTop","marginLeft","marginRight","margin","borderWidth","borderColor","width","borderRadius","BORDER","paddingLeft","paddingRight","success","INPUT_SUCCESS","error","INPUT_ERROR","shadow","shadowColor","BLACK","shadowOffset","shadowRadius","shadowOpacity","elevation","color","fontSize","marginBottom","alignItems","paddingVertical","errorTextStyle","textAlign","padding"],"mappings":"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","sourcesContent":["import React, {useState, createRef} from 'react';\nimport { TouchableOpacity, StyleSheet, ScrollView, Image, KeyboardAvoidingView, Keyboard } from 'react-native';\nimport { Block, Text, Button as GaButton, theme, Input, Icon } from \"galio-framework\";\nimport { begguTheme } from \"../../constants\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport {clientesActions} from '../../actions'\n\nimport Loader from '../../screens/components/loader';\n\nconst RegisterScreen = ({navigation}) => {\n  const [userNombre, setUserNombre] = useState('')\n  const [userTelefono, setUserTelefono] = useState('')\n  const [userEmail, setUserEmail] = useState('')\n  const [userUsername, setUserUsername] = useState('')\n  const [userPassword, setUserPassword] = useState('')\n  const [userRefNombre, setRefNombre] = useState('')\n  const [userRefEmail, setUserRefEmail] = useState('')  \n  const [errortext, setErrortext] = useState('');\n  const loading = useSelector(state => state.clientes.loading)  \n  const isRegistraionSuccess = useSelector(state => state.clientes.isRegistraionSuccess)\n\n\n  const dispatch = useDispatch()\n\n  const handleSubmitButton = () => {\n    setErrortext('');\n    if (!userNombre) {\n      alert('Por favor ingrese nombre');\n      return;\n    }\n    if (!userTelefono) {\n      alert('Por favor ingrese tel√©fono');\n      return;\n    }\n    if (!userEmail) {\n      alert('Por favor ingrese email');\n      return;\n    }\n    if (!userUsername) {\n      alert('Por favor ingrese username');\n      return;\n    }\n    if (!userPassword) {\n      alert('Por favor ingrese password');\n      return;\n    }\n    if (!userRefNombre) {\n      alert('Por favor ingrese nombre referencia');\n      return;\n    }\n    if (!userRefEmail) {\n      alert('Por favor ingrese mail referencia');\n      return;\n    }    \n    var dataToSend = {\n      nombre: userNombre,\n      email: userEmail,\n      telefono: userTelefono,\n      username: userUsername,\n      password: userPassword,\n      refnombre: userRefNombre,\n      refemail: userRefEmail      \n    };\n    dispatch(clientesActions.registro(dataToSend))\n\n  } \n  \n  if (isRegistraionSuccess) {\n    return (\n      <Block \n        style={{\n          flex: 1,\n          backgroundColor: '#eaeaea',\n          justifyContent: 'center',\n        }}>        \n        <Text style={styles.successTextStyle}>\n          Registro exitoso !!\n        </Text>\n        <TouchableOpacity\n          style={styles.buttonStyle}\n          activeOpacity={0.5}\n          onPress={() => navigation.navigate('Login')}>          \n          <Text style={styles.buttonTextStyle}>Inicia sesi√≥n</Text>\n        </TouchableOpacity>\n      </Block>\n    );\n  }\n\n  return (\n  <Block flex style={{backgroundColor: '#eaeaea', paddingTop: 10}}>\n    <Loader loading={loading} />\n    <Block flex style={styles.group}>\n    <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        contentContainerStyle={{\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}>       \n      <KeyboardAvoidingView enabled>\n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n        <Text style={styles.textInput}>Datos personales</Text>\n      </Block>\n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n        <Input\n            placeholder=\"Nombres\"\n            placeholderTextColor={begguTheme.COLORS.MUTED}\n            style={styles.inputStyle}\n            color={begguTheme.COLORS.HEADER}    \n            onChangeText={(Nombre) => setUserNombre(Nombre)}\n            iconContent={\n              <Icon\n                size={14}\n                color={begguTheme.COLORS.ICON}\n                name=\"link\"\n                family=\"AntDesign\"\n                style={styles.icons}\n              />\n            }  \n            \n        />\n      </Block>\n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n        <Input\n            placeholder=\"Email\"\n            placeholderTextColor={begguTheme.COLORS.MUTED}\n            style={styles.inputStyle}\n            color={begguTheme.COLORS.HEADER}    \n            onChangeText={(Email) => setUserEmail(Email)}\n            iconContent={\n              <Icon\n                size={14}\n                color={begguTheme.COLORS.ICON}\n                name=\"link\"\n                family=\"AntDesign\"\n                style={styles.icons}\n              />\n            }  \n            \n        />\n      </Block>\n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n        <Input\n            placeholder=\"Tel√©fono\"\n            placeholderTextColor={begguTheme.COLORS.MUTED}\n            style={styles.inputStyle}\n            color={begguTheme.COLORS.HEADER}    \n            onChangeText={(Telefono) => setUserTelefono(Telefono)}\n            iconContent={\n              <Icon\n                size={14}\n                color={begguTheme.COLORS.ICON}\n                name=\"link\"\n                family=\"AntDesign\"\n                style={styles.icons}\n              />\n            }  \n            \n        />\n      </Block>  \n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n        <Input\n            placeholder=\"Username\"\n            placeholderTextColor={begguTheme.COLORS.MUTED}\n            style={styles.inputStyle}\n            color={begguTheme.COLORS.HEADER}    \n            onChangeText={(Username) => setUserUsername(Username)}\n            iconContent={\n              <Icon\n                size={14}\n                color={begguTheme.COLORS.ICON}\n                name=\"link\"\n                family=\"AntDesign\"\n                style={styles.icons}\n              />\n            }  \n            \n        />\n      </Block>    \n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n        <Input\n            placeholder=\"Password\"\n            placeholderTextColor={begguTheme.COLORS.MUTED}\n            style={styles.inputStyle}\n            secureTextEntry={true}\n            color={begguTheme.COLORS.HEADER}    \n            onChangeText={(Password) => setUserPassword(Password)}\n            iconContent={\n              <Icon\n                size={14}\n                color={begguTheme.COLORS.ICON}\n                name=\"link\"\n                family=\"AntDesign\"\n                style={styles.icons}\n              />\n            }  \n            \n        />\n      </Block>\n      \n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n        <Text style={styles.textInput}>Datos de referencia</Text>\n      </Block>\n\n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n        <Input\n            placeholder=\"Nombre referencia\"\n            placeholderTextColor={begguTheme.COLORS.MUTED}\n            style={styles.inputStyle}\n            color={begguTheme.COLORS.HEADER}    \n            onChangeText={(RefNombre) => setRefNombre(RefNombre)}\n            iconContent={\n              <Icon\n                size={14}\n                color={begguTheme.COLORS.ICON}\n                name=\"link\"\n                family=\"AntDesign\"\n                style={styles.icons}\n              />\n            }  \n            \n        />\n      </Block>\n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n        <Input\n            placeholder=\"Email referencia\"\n            placeholderTextColor={begguTheme.COLORS.MUTED}\n            style={styles.inputStyle}\n            color={begguTheme.COLORS.HEADER}    \n            onChangeText={(RefEmail) => setUserRefEmail(RefEmail)}\n            iconContent={\n              <Icon\n                size={14}\n                color={begguTheme.COLORS.ICON}\n                name=\"link\"\n                family=\"AntDesign\"\n                style={styles.icons}\n              />\n            }  \n            \n        />\n      </Block>\n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n          <TouchableOpacity\n            style={styles.buttonStyle}\n            activeOpacity={0.5}\n            onPress={handleSubmitButton}>\n            <Text style={styles.buttonTextStyle}>\n              REGISTER\n            </Text>\n          </TouchableOpacity>\n      </Block>\n      </KeyboardAvoidingView>  \n    </ScrollView>  \n    </Block>\n  </Block> \n  );\n};\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n  sectionInput:{\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n    borderWidth: 3,\n    borderColor: \"#fff\"\n  },\n  inputStyle: {\n    flex:1,\n    width: '100%',\n    borderRadius: 4,\n    borderColor: begguTheme.COLORS.BORDER,    \n    backgroundColor: '#FFFFFF',\n    paddingLeft: 15\n  },\n  icons: {    \n    paddingLeft: 2,\n    paddingRight: 15\n  },\n  success: {\n    borderColor: begguTheme.COLORS.INPUT_SUCCESS,\n  },\n  error: {\n    borderColor: begguTheme.COLORS.INPUT_ERROR,\n  },\n  shadow: {\n    shadowColor: begguTheme.COLORS.BLACK,\n    shadowOffset: { width: 0, height: 1 },\n    shadowRadius: 2,\n    shadowOpacity: 0.05,\n    elevation: 2,\n  },\n  textInput:{\n    color:\"#4d4d4d\",\n    fontSize: 16,\n    height: 17,\n    marginBottom:1\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 10,\n    marginLeft: 35,\n    marginRight: 35,    \n    marginBottom: 20,\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16,\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  successTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30,\n  },\n \n});"]},"metadata":{},"sourceType":"module"}