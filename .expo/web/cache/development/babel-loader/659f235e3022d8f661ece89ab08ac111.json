{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/gabriel/Documentos/1click/Mobil/src/components/Icons/PerfilIcon.js\";\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { EvilIcons, FontAwesome5 } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clientesActions } from \"../../actions\";\n\nvar _retrieveData = function _retrieveData(key) {\n  var data;\n  return _regeneratorRuntime.async(function _retrieveData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nfunction PerfilIcon(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var dispatch = useDispatch();\n\n  function getAlerta() {\n    _retrieveData('userId').then(function (userId) {\n      if (userId !== '0') {\n        dispatch(clientesActions.getUsuario(userId));\n        navigation.navigate('Perfil');\n      } else {\n        navigation.navigate('Login');\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Buscar');\n    },\n    style: styles.imgSearch\n  }, React.createElement(EvilIcons, {\n    name: \"search\",\n    size: 35,\n    color: \"#eaeaea\"\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return getAlerta();\n    },\n    style: styles.imgPerfil\n  }, React.createElement(EvilIcons, {\n    name: \"user\",\n    size: 45,\n    color: \"#eaeaea\"\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    padding: 6\n  },\n  imgSearch: {\n    paddingTop: 6,\n    paddingLeft: 3,\n    height: 35,\n    marginRight: 10,\n    marginTop: 4\n  },\n  imgPerfil: {\n    paddingTop: 2,\n    height: 45,\n    marginTop: 4,\n    marginRight: 5\n  }\n});\nexport default PerfilIcon;","map":{"version":3,"sources":["/home/gabriel/Documentos/1click/Mobil/src/components/Icons/PerfilIcon.js"],"names":["React","EvilIcons","FontAwesome5","AsyncStorage","useSelector","useDispatch","clientesActions","_retrieveData","key","getItem","data","console","log","PerfilIcon","navigation","route","dispatch","getAlerta","then","userId","getUsuario","navigate","styles","container","imgSearch","imgPerfil","StyleSheet","create","flex","flexDirection","padding","paddingTop","paddingLeft","height","marginRight","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,oBAAxC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,eAAR;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAECL,YAAY,CAACM,OAAb,CAAqBD,GAArB,CAFD;;AAAA;AAEZE,UAAAA,IAFY;AAAA,2CAGXA,IAHW;;AAAA;AAAA;AAAA;AAKlBC,UAAAA,OAAO,CAACC,GAAR;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAUA,SAASC,UAAT,OAAwC;AAAA,MAAnBC,UAAmB,QAAnBA,UAAmB;AAAA,MAAPC,KAAO,QAAPA,KAAO;AACtC,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AACA,WAASY,SAAT,GAAsB;AAClBV,IAAAA,aAAa,CAAC,QAAD,CAAb,CAAwBW,IAAxB,CAA6B,UAACC,MAAD,EAAU;AACrC,UAAGA,MAAM,KAAK,GAAd,EAAkB;AAChBH,QAAAA,QAAQ,CAACV,eAAe,CAACc,UAAhB,CAA2BD,MAA3B,CAAD,CAAR;AACAL,QAAAA,UAAU,CAACO,QAAX,CAAoB,QAApB;AAED,OAJD,MAIK;AACHP,QAAAA,UAAU,CAACO,QAAX,CAAoB,OAApB;AAED;AACF,KATD;AAUC;;AAEH,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACA,oBAAC,gBAAD;AAAmB,IAAA,OAAO,EAAE;AAAA,aAAMT,UAAU,CAACO,QAAX,CAAoB,QAApB,CAAN;AAAA,KAA5B;AAAiE,IAAA,KAAK,EAAEC,MAAM,CAACE;AAA/E,KACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,QAAhB;AAAyB,IAAA,IAAI,EAAE,EAA/B;AAAmC,IAAA,KAAK,EAAC;AAAzC,IADJ,CADA,EAIA,oBAAC,gBAAD;AAAmB,IAAA,OAAO,EAAE;AAAA,aAAMP,SAAS,EAAf;AAAA,KAA5B;AAAgD,IAAA,KAAK,EAAEK,MAAM,CAACG;AAA9D,KACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,IAAI,EAAE,EAA7B;AAAiC,IAAA,KAAK,EAAC;AAAvC,IADJ,CAJA,CADJ;AAUH;;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAC;AACRK,IAAAA,IAAI,EAAC,CADG;AAERC,IAAAA,aAAa,EAAC,KAFN;AAGRC,IAAAA,OAAO,EAAC;AAHA,GADmB;AAM7BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,UAAU,EAAC,CADJ;AAEPC,IAAAA,WAAW,EAAC,CAFL;AAGPC,IAAAA,MAAM,EAAE,EAHD;AAIPC,IAAAA,WAAW,EAAC,EAJL;AAKPC,IAAAA,SAAS,EAAC;AALH,GANkB;AAa3BV,EAAAA,SAAS,EAAE;AACTM,IAAAA,UAAU,EAAC,CADF;AAETE,IAAAA,MAAM,EAAE,EAFC;AAGTE,IAAAA,SAAS,EAAC,CAHD;AAITD,IAAAA,WAAW,EAAC;AAJH;AAbgB,CAAlB,CAAf;AAqBA,eAAerB,UAAf","sourcesContent":["import React from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { EvilIcons, FontAwesome5 } from '@expo/vector-icons'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {clientesActions} from '../../actions'\n\nconst _retrieveData = async (key) => {\n  try {\n    const data = await AsyncStorage.getItem(key);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\nfunction PerfilIcon({navigation, route}){     \n  const dispatch = useDispatch()\n  function getAlerta () {            \n      _retrieveData('userId').then((userId)=>{              \n        if(userId !== '0'){          \n          dispatch(clientesActions.getUsuario(userId)) \n          navigation.navigate('Perfil');          \n          \n        }else{        \n          navigation.navigate('Login');\n          \n        }      \n      });\n      }\n\n    return(\n        <View style={styles.container}>                        \n        <TouchableOpacity  onPress={() => navigation.navigate('Buscar')} style={styles.imgSearch}>\n            <EvilIcons name=\"search\" size={35} color=\"#eaeaea\" />\n        </TouchableOpacity>\n        <TouchableOpacity  onPress={() => getAlerta() } style={styles.imgPerfil}>\n            <EvilIcons name=\"user\" size={45} color=\"#eaeaea\" />\n        </TouchableOpacity>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container:{\n      flex:1,\n      flexDirection:'row',      \n      padding:6\n    },\n    imgSearch: {                \n        paddingTop:6,\n        paddingLeft:3,\n        height: 35,        \n        marginRight:10,\n        marginTop:4,    \n      },        \n      imgPerfil: {   \n        paddingTop:2,               \n        height: 45,               \n        marginTop:4,\n        marginRight:5            \n      },          \n  });\n\nexport default PerfilIcon"]},"metadata":{},"sourceType":"module"}