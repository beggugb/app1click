{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gabriel/Documentos/1click/Mobil/src/screens/Maps/EmergenciasScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport MapView, { Marker, Callout, CalloutSubview } from 'react-native-maps';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as Location from 'expo-location';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clientesActions } from \"../../actions\";\nimport MapsEmergencias from \"./components/MapsEmergencias\";\nexport default function EmergenciasScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      latitude = _useState6[0],\n      setLatitude = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      longitude = _useState8[0],\n      setLongitude = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (status !== 'granted') {\n                setErrorMsg('Permission to access location was denied');\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 7:\n              location = _context.sent;\n              setLocation(location);\n              setLatitude(location.coords.latitude);\n              setLongitude(location.coords.longitude);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })(dispatch(clientesActions.getEmergencias()));\n\n    return function () {\n      dispatch(clientesActions.resetL('RESET_EMERGENCIAS'));\n    };\n  }, []);\n  var text = 'Waiting..';\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location.coords);\n  }\n\n  function onRegionChanges() {\n    dispatch(clientesActions.getEmergencias());\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.subContainer\n  }, React.createElement(Text, {\n    style: styles.texto\n  }, \"Ubicar punto\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onRegionChanges();\n    },\n    style: styles.imgPerfil\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"map-marker-radius\",\n    size: 30,\n    color: \"red\"\n  }))), React.createElement(MapsEmergencias, {\n    latitude: latitude,\n    longitude: longitude\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  subContainer: {\n    flex: 1,\n    backgroundColor: '#2c2c2c',\n    flexDirection: 'row'\n  },\n  texto: {\n    flex: 1,\n    color: '#eaeaea',\n    paddingLeft: 15,\n    paddingTop: 8,\n    paddingRight: 10,\n    textAlign: 'right'\n  },\n  imgPerfil: {\n    height: 45,\n    marginTop: 1,\n    marginRight: 5\n  }\n});","map":{"version":3,"sources":["/home/gabriel/Documentos/1click/Mobil/src/screens/Maps/EmergenciasScreen.js"],"names":["React","useState","useEffect","MapView","Marker","Callout","CalloutSubview","MaterialCommunityIcons","Location","useSelector","useDispatch","clientesActions","MapsEmergencias","EmergenciasScreen","location","setLocation","errorMsg","setErrorMsg","latitude","setLatitude","longitude","setLongitude","loading","setLoading","dispatch","requestPermissionsAsync","status","getCurrentPositionAsync","coords","getEmergencias","resetL","text","JSON","stringify","onRegionChanges","styles","container","subContainer","texto","imgPerfil","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","flexDirection","color","paddingLeft","paddingTop","paddingRight","textAlign","height","marginTop","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {View, StyleSheet, Dimensions, Text, TouchableOpacity, Image } from 'react-native'\nimport MapView,{Marker, Callout, CalloutSubview } from 'react-native-maps';\nimport { MaterialCommunityIcons } from '@expo/vector-icons'; \nimport * as Location from 'expo-location';\nimport { useSelector, useDispatch } from 'react-redux'\nimport {clientesActions} from '../../actions'\nimport MapsEmergencias from './components/MapsEmergencias'\n\nexport default function EmergenciasScreen() {  \n  \n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [latitude, setLatitude ] = useState(null);\n  const [longitude, setLongitude ] = useState(null);\n  const [loading, setLoading ] = useState(true);\n  const dispatch = useDispatch()\n   \n  useEffect(() =>{    \n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n      }\n\n      let location = await Location.getCurrentPositionAsync({});      \n        setLocation(location);\n        setLatitude(location.coords.latitude)\n        setLongitude(location.coords.longitude)      \n      })(dispatch(clientesActions.getEmergencias()));\n\n    return () =>{\n      \n      dispatch(clientesActions.resetL('RESET_EMERGENCIAS'))\n      \n    };\n\n  }, []);\n\n  let text = 'Waiting..';  \n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location.coords);        \n  }\n  function onRegionChanges(){\n    dispatch(clientesActions.getEmergencias())        \n  }\n  \n  return(\n        <View style={styles.container}>\n          <View style={styles.subContainer}>\n          <Text style={styles.texto}>Ubicar punto</Text>\n          <TouchableOpacity  \n              onPress={() => onRegionChanges() }\n              style={styles.imgPerfil}>\n                <MaterialCommunityIcons name=\"map-marker-radius\" size={30} color=\"red\" />\n          </TouchableOpacity>            \n          </View> \n          <MapsEmergencias\n            latitude = {latitude}\n            longitude = {longitude}\n          />\n        </View>                              \n      )            \n    }\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    subContainer: {\n      flex: 1,\n      backgroundColor: '#2c2c2c', \n      flexDirection:'row'          \n    },\n    texto: {\n      flex: 1,\n      color:'#eaeaea',\n      paddingLeft: 15,\n      paddingTop:8,\n      paddingRight:10,\n      textAlign:'right'\n    },      \n \n  imgPerfil: {       \n    height: 45,               \n    marginTop:1,\n    marginRight:5            \n  },\n  });"]},"metadata":{},"sourceType":"module"}