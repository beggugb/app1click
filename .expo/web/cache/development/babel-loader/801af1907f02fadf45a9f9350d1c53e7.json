{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gabriel/Documentos/1click/Mobil/src/screens/Home/Marketing/Video.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useCallback, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Block, Text, theme } from \"galio-framework\";\nimport YoutubePlayer from \"react-native-youtube-iframe\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nfunction Video(_ref) {\n  var video = _ref.video;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      playing = _useState2[0],\n      setPlaying = _useState2[1];\n\n  var onStateChange = useCallback(function (state) {\n    if (state === \"ended\") {}\n  }, []);\n  var togglePlaying = useCallback(function () {\n    setPlaying(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return React.createElement(Block, {\n    flex: true,\n    style: styles.banner\n  }, React.createElement(YoutubePlayer, {\n    height: 112,\n    width: 280,\n    play: playing,\n    videoId: video,\n    onChangeState: onStateChange\n  }));\n}\n\nvar styles = StyleSheet.create({\n  banner: {\n    flex: 1,\n    alignItems: 'center'\n  }\n});\nexport default Video;","map":{"version":3,"sources":["/home/gabriel/Documentos/1click/Mobil/src/screens/Home/Marketing/Video.js"],"names":["StatusBar","React","useEffect","useCallback","useState","Block","Text","theme","YoutubePlayer","Dimensions","get","height","width","Video","video","playing","setPlaying","onStateChange","state","togglePlaying","prev","styles","banner","StyleSheet","create","flex","alignItems"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,WAA1B,EAAuCC,QAAvC,QAAsD,OAAtD;;;;;;;;;;;AAEA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAmC,iBAAnC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;sBAE0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,M,mBAAAA,M;IAAQC,K,mBAAAA,K;;AAEhB,SAASC,KAAT,OAA2B;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACOV,QAAQ,CAAC,IAAD,CADf;AAAA;AAAA,MAChBW,OADgB;AAAA,MACPC,UADO;;AAEvB,MAAMC,aAAa,GAAGd,WAAW,CAAC,UAACe,KAAD,EAAW;AACzC,QAAIA,KAAK,KAAK,OAAd,EAAuB,CAEtB;AAEF,GAL8B,EAK5B,EAL4B,CAAjC;AAOE,MAAMC,aAAa,GAAGhB,WAAW,CAAC,YAAM;AACtCa,IAAAA,UAAU,CAAC,UAACI,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAAV;AACD,GAFgC,EAE9B,EAF8B,CAAjC;AAGJ,SACE,oBAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAY,IAAA,KAAK,EAAEC,MAAM,CAACC;AAA1B,KACG,oBAAC,aAAD;AACC,IAAA,MAAM,EAAE,GADT;AAEC,IAAA,KAAK,EAAE,GAFR;AAGC,IAAA,IAAI,EAAEP,OAHP;AAIC,IAAA,OAAO,EAAED,KAJV;AAKC,IAAA,aAAa,EAAEG;AALhB,IADH,CADF;AAYD;;AAED,IAAMI,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,MAAM,EAAE;AACNG,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,UAAU,EAAC;AAFL;AADuB,CAAlB,CAAf;AAMA,eAAeb,KAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useEffect, useCallback, useState} from 'react';\nimport { Alert, Button, Image, ImageBackground, FlatList, ScrollView, Dimensions, StyleSheet, View, Linking } from 'react-native';\nimport { Block, Text, theme } from \"galio-framework\";\nimport YoutubePlayer from \"react-native-youtube-iframe\";\n\nconst { height, width } = Dimensions.get(\"screen\")\n\nfunction Video ({ video } ){      \n    const [playing, setPlaying] = useState(true)\n    const onStateChange = useCallback((state) => {\n        if (state === \"ended\") {         \n          /*Alert.alert(\"video has finished playing!\");*/\n        }\n         \n      }, []);\n    \n      const togglePlaying = useCallback(() => {\n        setPlaying((prev) => !prev);\n      }, []);\n  return(\n    <Block flex style={styles.banner}>      \n       <YoutubePlayer\n        height={112}\n        width={280}\n        play={playing}\n        videoId={video}\n        onChangeState={onStateChange}\n      />      \n    </Block>\n    \n  ) \n}\n\nconst styles = StyleSheet.create({  \n  banner: {    \n    flex: 1,\n    alignItems:'center'\n  },      \n});\nexport default Video"]},"metadata":{},"sourceType":"module"}