{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/gabriel/Documentos/1click/Mobil/src/screens/Login/LoginScreen.js\";\n\nimport React, { useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Block, Checkbox, Text, Button, theme, Input, Icon } from \"galio-framework\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { begguTheme } from \"../../constants\";\nimport Loader from \"../components/loader\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clientesActions } from \"../../actions\";\nimport { EvilIcons, FontAwesome5 } from '@expo/vector-icons';\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar _retrieveData = function _retrieveData(key) {\n  var data;\n  return _regeneratorRuntime.async(function _retrieveData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userUsername = _useState2[0],\n      setUserUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userPassword = _useState4[0],\n      setUserPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errortext = _useState6[0],\n      setErrortext = _useState6[1];\n\n  var loading = useSelector(function (state) {\n    return state.clientes.loading;\n  });\n  var user = useSelector(function (state) {\n    return state.clientes.user;\n  });\n  var isRegistraionSuccess = useSelector(function (state) {\n    return state.clientes.isRegistraionSuccess;\n  });\n  var dispatch = useDispatch();\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext('');\n\n    if (!userPassword) {\n      alert('Por favor ingrese password');\n      return;\n    }\n\n    if (!userUsername) {\n      alert('Por favor ingrese username');\n      return;\n    }\n\n    var dataToSend = {\n      username: userUsername,\n      password: userPassword\n    };\n    dispatch(clientesActions.login(dataToSend));\n\n    _retrieveData('userId').then(function (userId) {\n      if (userId !== '0') {\n        navigation.navigate('Home');\n      } else {\n        alert('No existe usuario');\n      }\n    });\n  };\n\n  return React.createElement(Block, {\n    flex: true,\n    style: {\n      backgroundColor: '#F4F5F7'\n    }\n  }, React.createElement(Loader, {\n    loading: loading\n  }), React.createElement(Block, {\n    flex: true,\n    style: styles.group\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: {\n      justifyContent: 'center',\n      alignContent: 'center',\n      marginTop: 10\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    enabled: true\n  }, React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Nombres\",\n    placeholderTextColor: begguTheme.COLORS.MUTED,\n    style: styles.inputStyle,\n    color: begguTheme.COLORS.HEADER,\n    onChangeText: function onChangeText(Username) {\n      return setUserUsername(Username);\n    },\n    iconContent: React.createElement(Icon, {\n      size: 20,\n      color: begguTheme.COLORS.ICON,\n      name: \"user\",\n      family: \"Entypo\",\n      style: styles.icons\n    })\n  })), React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Password\",\n    placeholderTextColor: begguTheme.COLORS.MUTED,\n    style: styles.inputStyle,\n    color: begguTheme.COLORS.HEADER,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(Password) {\n      return setUserPassword(Password);\n    },\n    iconContent: React.createElement(Icon, {\n      size: 18,\n      color: begguTheme.COLORS.ICON,\n      name: \"key\",\n      family: \"Entypo\",\n      style: styles.icons\n    })\n  })), React.createElement(Block, {\n    style: {\n      paddingHorizontal: theme.SIZES.BASE\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: handleSubmitButton\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle\n  }, \"LOGIN\")))), React.createElement(Block, {\n    style: styles.registro\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Register');\n    },\n    style: styles.imgSearch\n  }, React.createElement(Text, {\n    style: styles.txtLink\n  }, \"Registrate\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Recuperate');\n    },\n    style: styles.imgSearch\n  }, React.createElement(Text, {\n    style: styles.txtLink\n  }, \"Olvidaste tu contrase\\xF1a ?\"))))));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  mainBody: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#307ecc',\n    alignContent: 'center'\n  },\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 8,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 25\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    width: '100%',\n    borderRadius: 8,\n    borderColor: begguTheme.COLORS.BORDER,\n    backgroundColor: '#FFFFFF',\n    paddingLeft: 15\n  },\n  registerTextStyle: {\n    color: '#FFFFFF',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 14,\n    alignSelf: 'center',\n    padding: 10\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  group: {\n    borderWidth: 2,\n    borderColor: '#fff',\n    padding: 10\n  },\n  icons: {\n    paddingLeft: 2,\n    paddingRight: 15\n  },\n  registro: {\n    alignSelf: 'center',\n    width: '75%',\n    textAlign: 'center',\n    alignItems: 'center'\n  },\n  imgSearch: {\n    flexDirection: 'row'\n  },\n  txtSearch: {\n    paddingLeft: 5,\n    paddingTop: 6,\n    fontSize: 14,\n    color: \"#c1c1c1\"\n  },\n  txtLink: {\n    color: \"#0b86f6\",\n    paddingRight: 8,\n    marginTop: 5\n  }\n});","map":{"version":3,"sources":["/home/gabriel/Documentos/1click/Mobil/src/screens/Login/LoginScreen.js"],"names":["React","useState","createRef","Block","Checkbox","Text","Button","theme","Input","Icon","AsyncStorage","begguTheme","Loader","useSelector","useDispatch","clientesActions","EvilIcons","FontAwesome5","Dimensions","get","width","height","_retrieveData","key","getItem","data","console","log","LoginScreen","navigation","userUsername","setUserUsername","userPassword","setUserPassword","errortext","setErrortext","loading","state","clientes","user","isRegistraionSuccess","dispatch","handleSubmitButton","alert","dataToSend","username","password","login","then","userId","navigate","backgroundColor","styles","group","justifyContent","alignContent","marginTop","paddingHorizontal","SIZES","BASE","COLORS","MUTED","inputStyle","HEADER","Username","ICON","icons","Password","buttonStyle","buttonTextStyle","registro","imgSearch","txtLink","StyleSheet","create","mainBody","flex","SectionStyle","flexDirection","marginLeft","marginRight","margin","borderWidth","color","borderColor","alignItems","borderRadius","marginBottom","paddingVertical","fontSize","BORDER","paddingLeft","registerTextStyle","textAlign","fontWeight","alignSelf","padding","errorTextStyle","paddingRight","txtSearch","paddingTop"],"mappings":"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","sourcesContent":["import React, {useState, createRef} from 'react';\nimport {\n  StyleSheet,\n  TextInput,\n  View,  \n  ScrollView,\n  Image,\n  Keyboard,\n  ImageBackground,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Dimensions\n} from 'react-native';\nimport { Block, Checkbox, Text, Button, theme, Input, Icon } from \"galio-framework\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { begguTheme } from \"../../constants\"\nimport Loader from '../components/loader';\nimport { useSelector, useDispatch } from 'react-redux'\nimport {clientesActions} from '../../actions'\nimport { EvilIcons, FontAwesome5 } from '@expo/vector-icons'\n\nconst { width, height } = Dimensions.get(\"screen\");\n\nconst _retrieveData = async (key) => {\n  try {\n    const data = await AsyncStorage.getItem(key);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst LoginScreen = ({navigation}) => {\n  const [userUsername, setUserUsername] = useState('');\n  const [userPassword, setUserPassword] = useState('');  \n  const [errortext, setErrortext] = useState('');\n\n  const loading = useSelector(state => state.clientes.loading)  \n  const user = useSelector(state => state.clientes.user)  \n  const isRegistraionSuccess = useSelector(state => state.clientes.isRegistraionSuccess)\n  \n\n  const dispatch = useDispatch()\n\n  const handleSubmitButton = () => {\n    setErrortext('');\n    if (!userPassword) {\n      alert('Por favor ingrese password');\n      return;\n    }    \n    if (!userUsername) {\n      alert('Por favor ingrese username');\n      return;\n    }\n       \n    var dataToSend = {      \n      username: userUsername,\n      password: userPassword \n    };\n    dispatch(clientesActions.login(dataToSend))     \n\n    _retrieveData('userId').then((userId)=>{      \n      if(userId !=='0'){\n        navigation.navigate('Home');        \n      }else{        \n        alert('No existe usuario')\n      }      \n    });\n    \n  } \n  return (    \n    <Block flex style={{backgroundColor: '#F4F5F7'}}>\n    <Loader loading={loading} />\n    <Block flex style={styles.group}>\n    <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        contentContainerStyle={{\n          justifyContent: 'center',\n          alignContent: 'center',\n          marginTop: 10\n        }}>\n      \n      <KeyboardAvoidingView enabled>      \n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n        <Input\n            placeholder=\"Nombres\"\n            placeholderTextColor={begguTheme.COLORS.MUTED}\n            style={styles.inputStyle}\n            color={begguTheme.COLORS.HEADER}    \n            onChangeText={(Username) => setUserUsername(Username)}\n            iconContent={\n              <Icon\n                size={20}\n                color={begguTheme.COLORS.ICON}\n                name=\"user\"\n                family=\"Entypo\"\n                style={styles.icons}\n              />\n            }  \n            \n        />\n      </Block>\n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n        <Input\n            placeholder=\"Password\"\n            placeholderTextColor={begguTheme.COLORS.MUTED}\n            style={styles.inputStyle}\n            color={begguTheme.COLORS.HEADER}    \n            secureTextEntry={true}\n            onChangeText={(Password) => setUserPassword(Password)}\n            iconContent={\n              <Icon\n                size={18}\n                color={begguTheme.COLORS.ICON}\n                name=\"key\"\n                family=\"Entypo\"\n                style={styles.icons}\n              />\n            }  \n            \n        />\n      </Block>\n\n      <Block style={{ paddingHorizontal: theme.SIZES.BASE }}>\n          <TouchableOpacity\n            style={styles.buttonStyle}\n            activeOpacity={0.5}\n            onPress={handleSubmitButton}>\n            <Text style={styles.buttonTextStyle}>\n              LOGIN\n            </Text>\n          </TouchableOpacity>\n      </Block>\n      </KeyboardAvoidingView>  \n\n      <Block style={styles.registro}>\n        <TouchableOpacity  onPress={() => navigation.navigate('Register')} style={styles.imgSearch}>                        \n            <Text style={styles.txtLink}>Registrate</Text>\n        </TouchableOpacity>  \n        <TouchableOpacity  onPress={() => navigation.navigate('Recuperate')} style={styles.imgSearch}>                        \n            <Text style={styles.txtLink}>Olvidaste tu contraseña ?</Text>\n        </TouchableOpacity>  \n      </Block>\n    </ScrollView>      \n    </Block> \n\n  </Block>   \n  );\n};\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  mainBody: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#307ecc',\n    alignContent: 'center',\n  },\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 8,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 25,\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16,\n  },\n  inputStyle: {\n    flex:1,\n    width: '100%',\n    borderRadius: 8,\n    borderColor: begguTheme.COLORS.BORDER,    \n    backgroundColor: '#FFFFFF',\n    paddingLeft: 15\n  },\n  registerTextStyle: {\n    color: '#FFFFFF',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 14,\n    alignSelf: 'center',\n    padding: 10,\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  group:{\n    borderWidth:2,\n    borderColor: '#fff',\n    padding:10\n  },\n  icons: {    \n    paddingLeft: 2,\n    paddingRight: 15\n  },\n  registro:{                \n    alignSelf: 'center',\n    width: '75%',\n    textAlign: 'center',\n    alignItems:'center'\n  },\n  imgSearch:{\n    flexDirection:'row'\n  },\n  txtSearch:{\n    paddingLeft:5,\n    paddingTop: 6,\n    fontSize: 14,\n    color:\"#c1c1c1\"\n  },\n  txtLink:{\n    color:\"#0b86f6\",\n    paddingRight: 8,\n    marginTop: 5\n  }\n  \n});"]},"metadata":{},"sourceType":"module"}